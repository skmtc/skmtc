{
  "openapi": "3.0.0",
  "info": {
    "title": "CodeSquared api",
    "version": "0.0.0"
  },
  "tags": [
    {
      "name": "Account"
    },
    {
      "name": "Deployment"
    },
    {
      "name": "Generator"
    },
    {
      "name": "Schema"
    },
    {
      "name": "Server"
    },
    {
      "name": "Workspace"
    }
  ],
  "paths": {
    "/accounts": {
      "get": {
        "operationId": "Accounts_list",
        "description": "Get all accounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Account"
        ]
      },
      "post": {
        "operationId": "Accounts_create",
        "description": "Create a new account",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "tags": [
          "Account"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountBody"
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Accounts_update",
        "description": "Update an account",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "tags": [
          "Account"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountBody"
              }
            }
          }
        }
      }
    },
    "/accounts/{accountName}": {
      "get": {
        "operationId": "Accounts_getByName",
        "description": "Get an account by name",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/deployments/{deploymentId}": {
      "get": {
        "operationId": "Deployments_readDeploymentInfo",
        "description": "Read deployment info",
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentInfo"
                }
              }
            }
          }
        },
        "tags": [
          "Deployment"
        ]
      },
      "delete": {
        "operationId": "Deployments_deleteDeployment",
        "description": "Delete deployments",
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "tags": [
          "Deployment"
        ]
      }
    },
    "/deployments/{deploymentId}/canonical-domain-name": {
      "put": {
        "operationId": "Deployments_updateCanonicalDomainName",
        "description": "Set specfied deployment to use the canonical domain name",
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCanonicalDomainNameResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Deployment"
        ]
      }
    },
    "/deployments/{deploymentId}/deployment-logs": {
      "get": {
        "operationId": "Deployments_readDeploymentLogs",
        "description": "Read deployment logs",
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queryParams",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {}
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/x-ndjson": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "$ref": "#/components/schemas/BuildLogsResponseEntry"
                    }
                  },
                  "required": [
                    "body"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BuildLogsResponseEntry"
                      }
                    }
                  },
                  "required": [
                    "body"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Deployment"
        ]
      }
    },
    "/deployments/{deploymentId}/runtime-logs": {
      "get": {
        "operationId": "Deployments_readRuntimeLogs",
        "description": "Read runtime logs",
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queryParams",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {}
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/x-ndjson": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "$ref": "#/components/schemas/AppLogsResponseEntry"
                    }
                  },
                  "required": [
                    "body"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppLogsResponseEntry"
                      }
                    }
                  },
                  "required": [
                    "body"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Deployment"
        ]
      }
    },
    "/generators": {
      "get": {
        "operationId": "Generators_list",
        "description": "Get all generators",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Generator"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Generator"
        ]
      },
      "post": {
        "operationId": "Generators_create",
        "description": "Create a new generator",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generator"
                }
              }
            }
          }
        },
        "tags": [
          "Generator"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGeneratorBody"
              }
            }
          }
        }
      }
    },
    "/schemas": {
      "get": {
        "operationId": "Schemas_list",
        "description": "Get all OpenAPI schema documents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Schema"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Schema"
        ]
      },
      "post": {
        "operationId": "Schemas_create",
        "description": "Create a new OpenAPI schema document",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schema"
                }
              }
            }
          }
        },
        "tags": [
          "Schema"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSchemaBody"
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Schemas_update",
        "description": "Update an existing OpenAPI schema document",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schema"
                }
              }
            }
          }
        },
        "tags": [
          "Schema"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchemaBody"
              }
            }
          }
        }
      }
    },
    "/schemas/{slug}": {
      "get": {
        "operationId": "Schemas_get",
        "description": "Get a single OpenAPI schema document by slug",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schema"
                }
              }
            }
          }
        },
        "tags": [
          "Schema"
        ]
      }
    },
    "/servers": {
      "get": {
        "operationId": "Servers_getServers",
        "description": "Get all servers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Server"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Server"
        ]
      },
      "post": {
        "operationId": "Servers_createAndDeployServer",
        "description": "Create and deploy a new generator stack using existing generators",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerWithStatus"
                }
              }
            }
          }
        },
        "tags": [
          "Server"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServerBody"
              }
            }
          }
        }
      }
    },
    "/servers/{accountName}/{stackName}": {
      "post": {
        "operationId": "Servers_create",
        "description": "Deploy a new generator stack to server",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerWithStatus"
                }
              }
            }
          }
        },
        "tags": [
          "Server"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DenoDeploymentAssets"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Servers_deleteServer",
        "description": "Delete a server",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "tags": [
          "Server"
        ]
      }
    },
    "/servers/{accountName}/{stackName}/settings": {
      "post": {
        "operationId": "Servers_createSettings",
        "description": "Generate settings for a deployed generator stack",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/OperationsGeneratorSettings"
                      },
                      {
                        "$ref": "#/components/schemas/ModelsGeneratorSettings"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Server"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {}
              }
            }
          }
        }
      }
    },
    "/servers/{accountName}/{stackName}/{deploymentId}": {
      "post": {
        "operationId": "Servers_createArtifacts",
        "description": "Generate artifacts",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateArtifactsResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Server"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {}
              }
            }
          }
        }
      }
    },
    "/servers/{stackName}": {
      "get": {
        "operationId": "Servers_getDeployments",
        "description": "Get all deployments for a server",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deployment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Server"
        ]
      }
    },
    "/workspaces": {
      "get": {
        "operationId": "Workspaces_list",
        "description": "Get all workspaces",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workspace"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Workspace"
        ]
      },
      "post": {
        "operationId": "Workspaces_create",
        "description": "Create a new workspace",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          }
        },
        "tags": [
          "Workspace"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceBody"
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}": {
      "put": {
        "operationId": "Workspaces_update",
        "description": "Update an existing workspace",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          }
        },
        "tags": [
          "Workspace"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkspaceBody"
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceName}": {
      "get": {
        "operationId": "Workspaces_get",
        "description": "Get workspace details by name",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDetails"
                }
              }
            }
          }
        },
        "tags": [
          "Workspace"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "type": "object",
        "required": [
          "id",
          "name",
          "label",
          "status",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "live",
              "hidden"
            ]
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "AppLogsResponseEntry": {
        "type": "object",
        "required": [
          "time",
          "level",
          "message",
          "region"
        ],
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "level": {
            "type": "string",
            "enum": [
              "error",
              "warning",
              "info",
              "debug"
            ]
          },
          "message": {
            "type": "string"
          },
          "region": {
            "type": "string",
            "enum": [
              "gcp-asia-east1",
              "gcp-asia-east2",
              "gcp-asia-northeast1",
              "gcp-asia-northeast2",
              "gcp-asia-northeast3",
              "gcp-asia-south1",
              "gcp-asia-south2",
              "gcp-asia-southeast1",
              "gcp-asia-southeast2",
              "gcp-australia-southeast1",
              "gcp-australia-southeast2",
              "gcp-europe-central2",
              "gcp-europe-north1",
              "gcp-europe-southwest1",
              "gcp-europe-west1",
              "gcp-europe-west2",
              "gcp-europe-west3",
              "gcp-europe-west4",
              "gcp-europe-west6",
              "gcp-europe-west8",
              "gcp-me-west1",
              "gcp-northamerica-northeast1",
              "gcp-northamerica-northeast2",
              "gcp-southamerica-east1",
              "gcp-southamerica-west1",
              "gcp-us-central1",
              "gcp-us-east1",
              "gcp-us-east4",
              "gcp-us-east5",
              "gcp-us-south1",
              "gcp-us-west1",
              "gcp-us-west2",
              "gcp-us-west3",
              "gcp-us-west4"
            ]
          }
        }
      },
      "BuildLogsResponseEntry": {
        "type": "object",
        "required": [
          "level",
          "message"
        ],
        "properties": {
          "level": {
            "type": "string",
            "enum": [
              "error",
              "warning",
              "info",
              "debug"
            ]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CreateAccountBody": {
        "type": "object",
        "required": [
          "label"
        ],
        "properties": {
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CreateArtifactsResponse": {
        "type": "object",
        "required": [
          "artifacts",
          "manifest"
        ],
        "properties": {
          "artifacts": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "manifest": {
            "$ref": "#/components/schemas/ManifestContent"
          }
        }
      },
      "CreateGeneratorBody": {
        "type": "object",
        "required": [
          "name",
          "dependencies",
          "sourceUrl",
          "registryUrl"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sourceUrl": {
            "type": "string"
          },
          "registryUrl": {
            "type": "string"
          }
        }
      },
      "CreateSchemaBody": {
        "type": "object",
        "required": [
          "content"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "sourceUrl": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "CreateServerBody": {
        "type": "object",
        "required": [
          "stackName",
          "generatorIds"
        ],
        "properties": {
          "stackName": {
            "type": "string",
            "description": "{\"label\": \"Stack name\", \"inputType\": \"text\"}"
          },
          "generatorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "{\"label\": \"Generators\", \"inputType\": \"generators-list\"}"
          }
        }
      },
      "CreateWorkspaceBody": {
        "type": "object",
        "required": [
          "label",
          "schemaVersionId",
          "deploymentId"
        ],
        "properties": {
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "schemaVersionId": {
            "type": "string"
          },
          "deploymentId": {
            "type": "string"
          }
        }
      },
      "DenoDeploymentAssets": {
        "type": "object",
        "required": [
          "generatorIds",
          "assets"
        ],
        "properties": {
          "generatorIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DenoFile"
            }
          }
        }
      },
      "DenoFile": {
        "type": "object",
        "required": [
          "kind",
          "content",
          "encoding"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "file"
            ]
          },
          "content": {
            "type": "string"
          },
          "encoding": {
            "type": "string",
            "enum": [
              "utf-8",
              "base64"
            ]
          }
        }
      },
      "Deployment": {
        "type": "object",
        "required": [
          "id",
          "isCanonical",
          "serverId",
          "denoDeploymentId",
          "deploymentStatus",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "isCanonical": {
            "type": "boolean"
          },
          "serverId": {
            "type": "string"
          },
          "denoDeploymentId": {
            "type": "string",
            "nullable": true
          },
          "deploymentStatus": {
            "type": "string",
            "enum": [
              "failed",
              "pending",
              "success",
              "deleted"
            ],
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "DeploymentInfo": {
        "type": "object",
        "required": [
          "id",
          "assets",
          "status",
          "projectId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "assets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DenoFile"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failed",
              "deleted"
            ]
          },
          "projectId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "EnrichedSetting": {
        "type": "object",
        "required": [
          "selected"
        ],
        "properties": {
          "selected": {
            "type": "boolean"
          },
          "enrichments": {}
        }
      },
      "FormatterOption": {
        "type": "object",
        "required": [
          "schema",
          "label"
        ],
        "properties": {
          "schema": {
            "type": "object",
            "additionalProperties": {}
          },
          "label": {
            "type": "string"
          }
        }
      },
      "Generator": {
        "type": "object",
        "required": [
          "id",
          "name",
          "accountId",
          "dependencies",
          "sourceUrl",
          "registryUrl",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sourceUrl": {
            "type": "string"
          },
          "registryUrl": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "InputOption": {
        "type": "object",
        "required": [
          "schema",
          "label"
        ],
        "properties": {
          "schema": {
            "type": "object",
            "additionalProperties": {}
          },
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ManifestContent": {
        "type": "object",
        "required": [
          "deploymentId",
          "traceId",
          "spanId",
          "files",
          "previews",
          "results",
          "startAt",
          "endAt"
        ],
        "properties": {
          "deploymentId": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          },
          "spanId": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "files": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ManifestEntry"
            }
          },
          "previews": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/Preview"
              }
            }
          },
          "results": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "success",
                    "warning",
                    "error",
                    "notSelected",
                    "notSupported"
                  ]
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "success",
                      "warning",
                      "error",
                      "notSelected",
                      "notSupported"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "success",
                        "warning",
                        "error",
                        "notSelected",
                        "notSupported"
                      ]
                    },
                    "nullable": true
                  }
                }
              ]
            }
          },
          "startAt": {
            "type": "integer"
          },
          "endAt": {
            "type": "integer"
          }
        }
      },
      "ManifestEntry": {
        "type": "object",
        "required": [
          "lines",
          "characters",
          "generatorKeys",
          "destinationPath"
        ],
        "properties": {
          "lines": {
            "type": "integer"
          },
          "characters": {
            "type": "integer"
          },
          "generatorKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "destinationPath": {
            "type": "string"
          }
        }
      },
      "ModelPreview": {
        "type": "object",
        "required": [
          "type",
          "generatorId",
          "refName"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "model"
            ]
          },
          "generatorId": {
            "type": "string"
          },
          "refName": {
            "type": "string"
          }
        }
      },
      "ModelsGeneratorSettings": {
        "type": "object",
        "required": [
          "id",
          "models"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "exportPath": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "models": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EnrichedSetting"
            }
          }
        }
      },
      "OpenApiVersion": {
        "type": "string",
        "enum": [
          "2.0",
          "3.0",
          "3.1"
        ]
      },
      "OperationPreview": {
        "type": "object",
        "required": [
          "type",
          "generatorId",
          "operationPath",
          "operationMethod"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "operation"
            ]
          },
          "generatorId": {
            "type": "string"
          },
          "operationPath": {
            "type": "string"
          },
          "operationMethod": {
            "type": "string",
            "enum": [
              "get",
              "post",
              "put",
              "delete",
              "patch"
            ]
          }
        }
      },
      "OperationsGeneratorSettings": {
        "type": "object",
        "required": [
          "id",
          "operations"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "operations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/OperationsPathObject"
            }
          }
        }
      },
      "OperationsPathObject": {
        "type": "object",
        "properties": {
          "get": {
            "$ref": "#/components/schemas/EnrichedSetting"
          },
          "post": {
            "$ref": "#/components/schemas/EnrichedSetting"
          },
          "put": {
            "$ref": "#/components/schemas/EnrichedSetting"
          },
          "delete": {
            "$ref": "#/components/schemas/EnrichedSetting"
          },
          "patch": {
            "$ref": "#/components/schemas/EnrichedSetting"
          }
        }
      },
      "Preview": {
        "type": "object",
        "required": [
          "name",
          "exportPath",
          "group",
          "source"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "route": {
            "type": "string"
          },
          "exportPath": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "input": {
            "$ref": "#/components/schemas/InputOption"
          },
          "formatter": {
            "$ref": "#/components/schemas/FormatterOption"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OperationPreview"
              },
              {
                "$ref": "#/components/schemas/ModelPreview"
              }
            ]
          }
        }
      },
      "Schema": {
        "type": "object",
        "required": [
          "id",
          "name",
          "slug",
          "accountName",
          "content",
          "openapiVersion",
          "format",
          "versionId",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "openapiVersion": {
            "$ref": "#/components/schemas/OpenApiVersion"
          },
          "format": {
            "$ref": "#/components/schemas/SchemaFormat"
          },
          "sourceUrl": {
            "type": "string"
          },
          "versionId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "SchemaFormat": {
        "type": "string",
        "enum": [
          "json",
          "yaml"
        ]
      },
      "Server": {
        "type": "object",
        "required": [
          "id",
          "accountName",
          "stackName",
          "latestDeploymentId",
          "latestStatus",
          "latestDenoDeploymentId",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "stackName": {
            "type": "string"
          },
          "latestDeploymentId": {
            "type": "string",
            "nullable": true
          },
          "latestStatus": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failed",
              "deleted"
            ],
            "nullable": true
          },
          "latestDenoDeploymentId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ServerWithStatus": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failed",
              "deleted"
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Server"
          }
        ]
      },
      "UpdateAccountBody": {
        "type": "object",
        "required": [
          "id",
          "label",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "live",
              "hidden"
            ]
          }
        }
      },
      "UpdateCanonicalDomainNameResponse": {
        "type": "object",
        "required": [
          "domain"
        ],
        "properties": {
          "domain": {
            "type": "string"
          }
        }
      },
      "UpdateSchemaBody": {
        "type": "object",
        "required": [
          "name",
          "slug",
          "content"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "sourceUrl": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "UpdateWorkspaceBody": {
        "type": "object",
        "required": [
          "label",
          "name",
          "schemaVersionId",
          "deploymentId"
        ],
        "properties": {
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "schemaVersionId": {
            "type": "string"
          },
          "deploymentId": {
            "type": "string"
          },
          "enrichments": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "Workspace": {
        "type": "object",
        "required": [
          "id",
          "name",
          "label",
          "schemaVersionId",
          "deploymentId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "schemaVersionId": {
            "type": "string"
          },
          "deploymentId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "WorkspaceDetails": {
        "type": "object",
        "required": [
          "id",
          "name",
          "label",
          "schema",
          "server",
          "enrichments",
          "baseImage",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          },
          "server": {
            "$ref": "#/components/schemas/Server"
          },
          "schemaContent": {
            "type": "string"
          },
          "enrichments": {
            "type": "object",
            "additionalProperties": {}
          },
          "baseImage": {
            "type": "object",
            "additionalProperties": {}
          },
          "createdAt": {
            "type": "string"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.codesquared.com",
      "description": "Single server endpoint",
      "variables": {}
    }
  ]
}
